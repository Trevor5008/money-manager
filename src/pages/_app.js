import { SessionProvider } from "next-auth/react";
import { useEffect, useState } from "react";
import { createTheme } from "@mui/material";
import { CssBaseline } from "@mui/material";
import { ThemeProvider } from "@mui/material/styles";
import Head from "next/head";
import "@/styles/globals.scss";
import "@/styles/landing.scss";
import "../frontend/components/NavBar/NavBar.scss";
import "../frontend/components/ThemeSwitch/ThemeSwitch.scss";
import "../frontend/components/Calendar/Calendar.scss";
import "../pages/accounts/add.scss";
import "../styles/accounts.scss";
import "../pages/transaction/add.scss";

export default function App({
   Component,
   pageProps: { session, ...pageProps },
}) {
   const [render, setRender] = useState(false);
   const [colorTheme, setColorTheme] = useState("light");

   const theme = createTheme({
      palette: {
         mode: colorTheme,
         primary: {
            main: '#436B81',
          },
          secondary: {
            main: '#9A6955',
            light: 'rgb(242, 242, 242)',
            dark: 'blue'
          },
          error: {
           main: '#d32f2f'
          },
          warning: {
           main: '#ed6c02'
          },
          info: {
           main: '#0288d1'
          },
          success: {
           main: '#2e7d32'
          }
      },
   });

   useEffect(() => {
      setRender(true);
   }, [session]);

   if (typeof window === "undefined") return null;

   const handleSwitch = () => {
      const newColorTheme = colorTheme === "light" ? "dark" : "light";
      setColorTheme(newColorTheme);
   };

   return render ? (
      <>
         <Head>
            <title>Money Manager</title>
            <meta name="description" content="Generated by create next app" />
            <meta
               name="viewport"
               content="width=device-width, initial-scale=1"
            />
            <link rel="icon" href="/money-mgr-favicon.ico" />
         </Head>
         <ThemeProvider theme={theme}>
            <SessionProvider session={session}>
               <CssBaseline />
               <Component 
                  {...pageProps} 
                  handleSwitch={handleSwitch}
               />
            </SessionProvider>
         </ThemeProvider>
      </>
   ) : null;
}
